#include "cgpu/api.h"
#include "utils.h"

static const unsigned char raster_cmd_wasm32[] = {
    0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00, 0x01, 0x34, 0x08, 0x60,
    0x01, 0x7f, 0x00, 0x60, 0x02, 0x7f, 0x7f, 0x00, 0x60, 0x02, 0x7f, 0x7f,
    0x01, 0x7f, 0x60, 0x07, 0x7f, 0x7d, 0x7d, 0x7d, 0x7d, 0x7d, 0x7d, 0x00,
    0x60, 0x05, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x00, 0x60, 0x03, 0x7f, 0x7f,
    0x7f, 0x00, 0x60, 0x00, 0x00, 0x60, 0x06, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,
    0x7f, 0x00, 0x02, 0x9d, 0x02, 0x09, 0x03, 0x65, 0x6e, 0x76, 0x0e, 0x63,
    0x67, 0x70, 0x75, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x62, 0x65, 0x67, 0x69,
    0x6e, 0x00, 0x00, 0x03, 0x65, 0x6e, 0x76, 0x19, 0x63, 0x67, 0x70, 0x75,
    0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
    0x65, 0x5f, 0x62, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x00, 0x01, 0x03,
    0x65, 0x6e, 0x76, 0x1a, 0x63, 0x67, 0x70, 0x75, 0x5f, 0x63, 0x6d, 0x64,
    0x5f, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x6e, 0x64, 0x65,
    0x72, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x00, 0x02, 0x03, 0x65, 0x6e, 0x76,
    0x20, 0x63, 0x67, 0x70, 0x75, 0x5f, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72,
    0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x74,
    0x5f, 0x76, 0x69, 0x65, 0x77, 0x70, 0x6f, 0x72, 0x74, 0x00, 0x03, 0x03,
    0x65, 0x6e, 0x76, 0x1f, 0x63, 0x67, 0x70, 0x75, 0x5f, 0x72, 0x65, 0x6e,
    0x64, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x5f,
    0x73, 0x65, 0x74, 0x5f, 0x73, 0x63, 0x69, 0x73, 0x73, 0x6f, 0x72, 0x00,
    0x04, 0x03, 0x65, 0x6e, 0x76, 0x21, 0x63, 0x67, 0x70, 0x75, 0x5f, 0x72,
    0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65,
    0x72, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x5f, 0x70, 0x69, 0x70, 0x65, 0x6c,
    0x69, 0x6e, 0x65, 0x00, 0x01, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x63, 0x67,
    0x70, 0x75, 0x5f, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x65, 0x6e,
    0x63, 0x6f, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x72, 0x61, 0x77, 0x00, 0x05,
    0x03, 0x65, 0x6e, 0x76, 0x18, 0x63, 0x67, 0x70, 0x75, 0x5f, 0x63, 0x6d,
    0x64, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72,
    0x5f, 0x70, 0x61, 0x73, 0x73, 0x00, 0x01, 0x03, 0x65, 0x6e, 0x76, 0x0c,
    0x63, 0x67, 0x70, 0x75, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x65, 0x6e, 0x64,
    0x00, 0x00, 0x03, 0x03, 0x02, 0x06, 0x07, 0x05, 0x03, 0x01, 0x00, 0x02,
    0x06, 0x2b, 0x07, 0x7f, 0x01, 0x41, 0x80, 0x88, 0x04, 0x0b, 0x7f, 0x00,
    0x41, 0x80, 0x08, 0x0b, 0x7f, 0x00, 0x41, 0x80, 0x08, 0x0b, 0x7f, 0x00,
    0x41, 0x80, 0x08, 0x0b, 0x7f, 0x00, 0x41, 0x80, 0x88, 0x04, 0x0b, 0x7f,
    0x00, 0x41, 0x00, 0x0b, 0x7f, 0x00, 0x41, 0x01, 0x0b, 0x07, 0x8b, 0x01,
    0x09, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x02, 0x00, 0x11, 0x5f,
    0x5f, 0x77, 0x61, 0x73, 0x6d, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x63,
    0x74, 0x6f, 0x72, 0x73, 0x00, 0x09, 0x11, 0x72, 0x61, 0x73, 0x74, 0x65,
    0x72, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
    0x00, 0x0a, 0x0c, 0x5f, 0x5f, 0x64, 0x73, 0x6f, 0x5f, 0x68, 0x61, 0x6e,
    0x64, 0x6c, 0x65, 0x03, 0x01, 0x0a, 0x5f, 0x5f, 0x64, 0x61, 0x74, 0x61,
    0x5f, 0x65, 0x6e, 0x64, 0x03, 0x02, 0x0d, 0x5f, 0x5f, 0x67, 0x6c, 0x6f,
    0x62, 0x61, 0x6c, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x03, 0x03, 0x0b, 0x5f,
    0x5f, 0x68, 0x65, 0x61, 0x70, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x03, 0x04,
    0x0d, 0x5f, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x62, 0x61,
    0x73, 0x65, 0x03, 0x05, 0x0c, 0x5f, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65,
    0x5f, 0x62, 0x61, 0x73, 0x65, 0x03, 0x06, 0x0a, 0x82, 0x03, 0x02, 0x02,
    0x00, 0x0b, 0xfc, 0x02, 0x01, 0x01, 0x7f, 0x23, 0x80, 0x80, 0x80, 0x80,
    0x00, 0x41, 0x90, 0x01, 0x6b, 0x22, 0x06, 0x24, 0x80, 0x80, 0x80, 0x80,
    0x00, 0x20, 0x00, 0x10, 0x80, 0x80, 0x80, 0x80, 0x00, 0x20, 0x06, 0x41,
    0xf0, 0x00, 0x6a, 0x41, 0x10, 0x6a, 0x42, 0x00, 0x37, 0x03, 0x00, 0x20,
    0x06, 0x41, 0x88, 0x01, 0x6a, 0x41, 0x00, 0x36, 0x02, 0x00, 0x20, 0x06,
    0x42, 0x00, 0x37, 0x03, 0x78, 0x20, 0x06, 0x41, 0x02, 0x36, 0x02, 0x74,
    0x20, 0x06, 0x20, 0x03, 0x36, 0x02, 0x70, 0x20, 0x06, 0x42, 0x80, 0x80,
    0x80, 0x80, 0x10, 0x37, 0x02, 0x64, 0x20, 0x06, 0x42, 0x80, 0x80, 0x80,
    0x80, 0x10, 0x37, 0x03, 0x58, 0x20, 0x06, 0x20, 0x06, 0x41, 0xf0, 0x00,
    0x6a, 0x36, 0x02, 0x60, 0x20, 0x06, 0x41, 0x00, 0x3a, 0x00, 0x50, 0x20,
    0x06, 0x41, 0x00, 0x36, 0x02, 0x4c, 0x20, 0x06, 0x42, 0x80, 0x80, 0x80,
    0x80, 0xc0, 0x00, 0x37, 0x02, 0x44, 0x20, 0x06, 0x20, 0x02, 0x36, 0x02,
    0x40, 0x20, 0x06, 0x41, 0x01, 0x36, 0x02, 0x3c, 0x20, 0x06, 0x42, 0x00,
    0x37, 0x03, 0x30, 0x20, 0x06, 0x20, 0x06, 0x41, 0xc0, 0x00, 0x6a, 0x36,
    0x02, 0x38, 0x20, 0x00, 0x20, 0x06, 0x41, 0x30, 0x6a, 0x10, 0x81, 0x80,
    0x80, 0x80, 0x00, 0x20, 0x00, 0x20, 0x06, 0x41, 0xd8, 0x00, 0x6a, 0x10,
    0x82, 0x80, 0x80, 0x80, 0x00, 0x22, 0x03, 0x43, 0x00, 0x00, 0x00, 0x00,
    0x43, 0x00, 0x00, 0x00, 0x00, 0x20, 0x04, 0xb3, 0x20, 0x05, 0xb3, 0x43,
    0x00, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x80, 0x3f, 0x10, 0x83, 0x80,
    0x80, 0x80, 0x00, 0x20, 0x03, 0x41, 0x00, 0x41, 0x00, 0x20, 0x02, 0x28,
    0x02, 0x04, 0x22, 0x04, 0x41, 0xff, 0xff, 0x03, 0x71, 0x20, 0x04, 0x41,
    0x10, 0x76, 0x10, 0x84, 0x80, 0x80, 0x80, 0x00, 0x20, 0x03, 0x20, 0x01,
    0x10, 0x85, 0x80, 0x80, 0x80, 0x00, 0x20, 0x03, 0x41, 0x03, 0x41, 0x00,
    0x10, 0x86, 0x80, 0x80, 0x80, 0x00, 0x20, 0x00, 0x20, 0x03, 0x10, 0x87,
    0x80, 0x80, 0x80, 0x00, 0x20, 0x06, 0x41, 0x00, 0x3a, 0x00, 0x28, 0x20,
    0x06, 0x41, 0x00, 0x36, 0x02, 0x24, 0x20, 0x06, 0x42, 0x84, 0x80, 0x80,
    0x80, 0x80, 0x80, 0x04, 0x37, 0x02, 0x1c, 0x20, 0x06, 0x20, 0x02, 0x36,
    0x02, 0x18, 0x20, 0x06, 0x41, 0x01, 0x36, 0x02, 0x14, 0x20, 0x06, 0x42,
    0x00, 0x37, 0x03, 0x08, 0x20, 0x06, 0x20, 0x06, 0x41, 0x18, 0x6a, 0x36,
    0x02, 0x10, 0x20, 0x00, 0x20, 0x06, 0x41, 0x08, 0x6a, 0x10, 0x81, 0x80,
    0x80, 0x80, 0x00, 0x20, 0x00, 0x10, 0x88, 0x80, 0x80, 0x80, 0x00, 0x20,
    0x06, 0x41, 0x90, 0x01, 0x6a, 0x24, 0x80, 0x80, 0x80, 0x80, 0x00, 0x0b
};
static const unsigned char raster_cmd_wasm64[] = {
    0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00, 0x01, 0x34, 0x08, 0x60,
    0x01, 0x7e, 0x00, 0x60, 0x02, 0x7e, 0x7e, 0x00, 0x60, 0x02, 0x7e, 0x7e,
    0x01, 0x7e, 0x60, 0x07, 0x7e, 0x7d, 0x7d, 0x7d, 0x7d, 0x7d, 0x7d, 0x00,
    0x60, 0x05, 0x7e, 0x7f, 0x7f, 0x7f, 0x7f, 0x00, 0x60, 0x03, 0x7e, 0x7f,
    0x7f, 0x00, 0x60, 0x00, 0x00, 0x60, 0x06, 0x7e, 0x7e, 0x7e, 0x7e, 0x7f,
    0x7f, 0x00, 0x02, 0x9d, 0x02, 0x09, 0x03, 0x65, 0x6e, 0x76, 0x0e, 0x63,
    0x67, 0x70, 0x75, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x62, 0x65, 0x67, 0x69,
    0x6e, 0x00, 0x00, 0x03, 0x65, 0x6e, 0x76, 0x19, 0x63, 0x67, 0x70, 0x75,
    0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
    0x65, 0x5f, 0x62, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x00, 0x01, 0x03,
    0x65, 0x6e, 0x76, 0x1a, 0x63, 0x67, 0x70, 0x75, 0x5f, 0x63, 0x6d, 0x64,
    0x5f, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x6e, 0x64, 0x65,
    0x72, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x00, 0x02, 0x03, 0x65, 0x6e, 0x76,
    0x20, 0x63, 0x67, 0x70, 0x75, 0x5f, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72,
    0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x74,
    0x5f, 0x76, 0x69, 0x65, 0x77, 0x70, 0x6f, 0x72, 0x74, 0x00, 0x03, 0x03,
    0x65, 0x6e, 0x76, 0x1f, 0x63, 0x67, 0x70, 0x75, 0x5f, 0x72, 0x65, 0x6e,
    0x64, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x5f,
    0x73, 0x65, 0x74, 0x5f, 0x73, 0x63, 0x69, 0x73, 0x73, 0x6f, 0x72, 0x00,
    0x04, 0x03, 0x65, 0x6e, 0x76, 0x21, 0x63, 0x67, 0x70, 0x75, 0x5f, 0x72,
    0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65,
    0x72, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x5f, 0x70, 0x69, 0x70, 0x65, 0x6c,
    0x69, 0x6e, 0x65, 0x00, 0x01, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x63, 0x67,
    0x70, 0x75, 0x5f, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x65, 0x6e,
    0x63, 0x6f, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x72, 0x61, 0x77, 0x00, 0x05,
    0x03, 0x65, 0x6e, 0x76, 0x18, 0x63, 0x67, 0x70, 0x75, 0x5f, 0x63, 0x6d,
    0x64, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72,
    0x5f, 0x70, 0x61, 0x73, 0x73, 0x00, 0x01, 0x03, 0x65, 0x6e, 0x76, 0x0c,
    0x63, 0x67, 0x70, 0x75, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x65, 0x6e, 0x64,
    0x00, 0x00, 0x03, 0x03, 0x02, 0x06, 0x07, 0x05, 0x03, 0x01, 0x04, 0x02,
    0x06, 0x2b, 0x07, 0x7e, 0x01, 0x42, 0x80, 0x88, 0x04, 0x0b, 0x7f, 0x00,
    0x41, 0x80, 0x08, 0x0b, 0x7f, 0x00, 0x41, 0x80, 0x08, 0x0b, 0x7f, 0x00,
    0x41, 0x80, 0x08, 0x0b, 0x7f, 0x00, 0x41, 0x80, 0x88, 0x04, 0x0b, 0x7f,
    0x00, 0x41, 0x00, 0x0b, 0x7f, 0x00, 0x41, 0x01, 0x0b, 0x07, 0x8b, 0x01,
    0x09, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x02, 0x00, 0x11, 0x5f,
    0x5f, 0x77, 0x61, 0x73, 0x6d, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x63,
    0x74, 0x6f, 0x72, 0x73, 0x00, 0x09, 0x11, 0x72, 0x61, 0x73, 0x74, 0x65,
    0x72, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
    0x00, 0x0a, 0x0c, 0x5f, 0x5f, 0x64, 0x73, 0x6f, 0x5f, 0x68, 0x61, 0x6e,
    0x64, 0x6c, 0x65, 0x03, 0x01, 0x0a, 0x5f, 0x5f, 0x64, 0x61, 0x74, 0x61,
    0x5f, 0x65, 0x6e, 0x64, 0x03, 0x02, 0x0d, 0x5f, 0x5f, 0x67, 0x6c, 0x6f,
    0x62, 0x61, 0x6c, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x03, 0x03, 0x0b, 0x5f,
    0x5f, 0x68, 0x65, 0x61, 0x70, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x03, 0x04,
    0x0d, 0x5f, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x62, 0x61,
    0x73, 0x65, 0x03, 0x05, 0x0c, 0x5f, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65,
    0x5f, 0x62, 0x61, 0x73, 0x65, 0x03, 0x06, 0x0a, 0x9b, 0x03, 0x02, 0x02,
    0x00, 0x0b, 0x95, 0x03, 0x01, 0x01, 0x7e, 0x23, 0x80, 0x80, 0x80, 0x80,
    0x00, 0x42, 0xc0, 0x01, 0x7d, 0x22, 0x06, 0x24, 0x80, 0x80, 0x80, 0x80,
    0x00, 0x20, 0x00, 0x10, 0x80, 0x80, 0x80, 0x80, 0x00, 0x20, 0x06, 0x42,
    0xb4, 0x01, 0x7c, 0x42, 0x00, 0x37, 0x02, 0x00, 0x20, 0x06, 0x42, 0xbc,
    0x01, 0x7c, 0x41, 0x00, 0x36, 0x02, 0x00, 0x20, 0x06, 0x42, 0x00, 0x37,
    0x02, 0xac, 0x01, 0x20, 0x06, 0x41, 0x02, 0x36, 0x02, 0xa8, 0x01, 0x20,
    0x06, 0x20, 0x03, 0x37, 0x03, 0xa0, 0x01, 0x20, 0x06, 0x41, 0x01, 0x36,
    0x02, 0x98, 0x01, 0x20, 0x06, 0x42, 0x00, 0x37, 0x03, 0x90, 0x01, 0x20,
    0x06, 0x41, 0x01, 0x36, 0x02, 0x80, 0x01, 0x20, 0x06, 0x42, 0x00, 0x37,
    0x03, 0x78, 0x20, 0x06, 0x20, 0x06, 0x42, 0xa0, 0x01, 0x7c, 0x37, 0x03,
    0x88, 0x01, 0x20, 0x06, 0x41, 0x00, 0x3a, 0x00, 0x74, 0x20, 0x06, 0x41,
    0x00, 0x36, 0x02, 0x70, 0x20, 0x06, 0x42, 0x80, 0x80, 0x80, 0x80, 0xc0,
    0x00, 0x37, 0x03, 0x68, 0x20, 0x06, 0x20, 0x02, 0x37, 0x03, 0x60, 0x20,
    0x06, 0x41, 0x01, 0x36, 0x02, 0x58, 0x20, 0x06, 0x41, 0x00, 0x36, 0x02,
    0x48, 0x20, 0x06, 0x42, 0x00, 0x37, 0x03, 0x40, 0x20, 0x06, 0x20, 0x06,
    0x42, 0xe0, 0x00, 0x7c, 0x37, 0x03, 0x50, 0x20, 0x00, 0x20, 0x06, 0x42,
    0xc0, 0x00, 0x7c, 0x10, 0x81, 0x80, 0x80, 0x80, 0x00, 0x20, 0x00, 0x20,
    0x06, 0x42, 0xf8, 0x00, 0x7c, 0x10, 0x82, 0x80, 0x80, 0x80, 0x00, 0x22,
    0x03, 0x43, 0x00, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x00, 0x20,
    0x04, 0xb3, 0x20, 0x05, 0xb3, 0x43, 0x00, 0x00, 0x00, 0x00, 0x43, 0x00,
    0x00, 0x80, 0x3f, 0x10, 0x83, 0x80, 0x80, 0x80, 0x00, 0x20, 0x03, 0x41,
    0x00, 0x41, 0x00, 0x20, 0x02, 0x28, 0x02, 0x08, 0x22, 0x04, 0x41, 0xff,
    0xff, 0x03, 0x71, 0x20, 0x04, 0x41, 0x10, 0x76, 0x10, 0x84, 0x80, 0x80,
    0x80, 0x00, 0x20, 0x03, 0x20, 0x01, 0x10, 0x85, 0x80, 0x80, 0x80, 0x00,
    0x20, 0x03, 0x41, 0x03, 0x41, 0x00, 0x10, 0x86, 0x80, 0x80, 0x80, 0x00,
    0x20, 0x00, 0x20, 0x03, 0x10, 0x87, 0x80, 0x80, 0x80, 0x00, 0x20, 0x06,
    0x41, 0x00, 0x3a, 0x00, 0x3c, 0x20, 0x06, 0x41, 0x00, 0x36, 0x02, 0x38,
    0x20, 0x06, 0x42, 0x84, 0x80, 0x80, 0x80, 0x80, 0x80, 0x04, 0x37, 0x03,
    0x30, 0x20, 0x06, 0x20, 0x02, 0x37, 0x03, 0x28, 0x20, 0x06, 0x41, 0x01,
    0x36, 0x02, 0x20, 0x20, 0x06, 0x41, 0x00, 0x36, 0x02, 0x10, 0x20, 0x06,
    0x42, 0x00, 0x37, 0x03, 0x08, 0x20, 0x06, 0x20, 0x06, 0x42, 0x28, 0x7c,
    0x37, 0x03, 0x18, 0x20, 0x00, 0x20, 0x06, 0x42, 0x08, 0x7c, 0x10, 0x81,
    0x80, 0x80, 0x80, 0x00, 0x20, 0x00, 0x10, 0x88, 0x80, 0x80, 0x80, 0x00,
    0x20, 0x06, 0x42, 0xc0, 0x01, 0x7c, 0x24, 0x80, 0x80, 0x80, 0x80, 0x00,
    0x0b
};

void setup_wasm(SWAInstanceId* wa_instance, SWARuntimeId* wa_runtime, SWAModuleId* wa_module)
{
    // Only wa_edge support wasm64 now
    SWAInstanceDescriptor inst_desc = { ESWA_BACKEND_WASM3 };
    *wa_instance = swa_create_instance(&inst_desc);
    SWARuntimeDescriptor runtime_desc = { "wa_runtime", 64 * 1024 };
    *wa_runtime = swa_create_runtime(*wa_instance, &runtime_desc);
    SWAModuleDescriptor module_desc;
    module_desc.name = "raster_cmd";
    module_desc.wasm = raster_cmd_wasm32;
    module_desc.wasm_size = sizeof(raster_cmd_wasm32);
    module_desc.bytes_pinned_outside = true;
    module_desc.strong_stub = false;
    *wa_module = swa_create_module(*wa_runtime, &module_desc);

    swa::utilx::link(*wa_module, "env", "cgpu_cmd_begin", cgpu_cmd_begin);
    swa::utilx::link(*wa_module, "env", "cgpu_cmd_resource_barrier", cgpu_cmd_resource_barrier);
    swa::utilx::link(*wa_module, "env", "cgpu_cmd_begin_render_pass", cgpu_cmd_begin_render_pass);
    swa::utilx::link(*wa_module, "env", "cgpu_render_encoder_set_viewport", cgpu_render_encoder_set_viewport);
    swa::utilx::link(*wa_module, "env", "cgpu_render_encoder_set_scissor", cgpu_render_encoder_set_scissor);
    swa::utilx::link(*wa_module, "env", "cgpu_render_encoder_bind_pipeline", cgpu_render_encoder_bind_pipeline);
    swa::utilx::link(*wa_module, "env", "cgpu_render_encoder_draw", cgpu_render_encoder_draw);
    swa::utilx::link(*wa_module, "env", "cgpu_cmd_end_render_pass", cgpu_cmd_end_render_pass);
    swa::utilx::link(*wa_module, "env", "cgpu_cmd_end", cgpu_cmd_end);
}

void finalize_wasm(SWAInstanceId wa_instance, SWARuntimeId wa_runtime, SWAModuleId wa_module)
{
    if (wa_module) swa_free_module(wa_module);
    if (wa_runtime) swa_free_runtime(wa_runtime);
    if (wa_instance) swa_free_instance(wa_instance);
}
